// 关于字符串的知识点.

// 对于大小无法在编译期确定的类型，rust都使用引用
// 字符串一版存在两个地方，静态存储区和堆

/// 理论:rust通过栈来管理堆内存,所以在编译期就需要知道类型的大小
fn main() {
    let s = "hello"; // 存储在静态存储区,s是字符串切片的引用，是一个胖指针（指向数据的指针和数据的长度）

    // 不可以使用静态存储区的字符串，因为rust无法在编译期确定大小
    // let s1 = *s;

    let s3 = String::from("world"); // 存储在堆上，是一个智能指针（指向数据的指针和容量及长度）

    // 不可以使用堆上的字符串，因为rust无法在编译期确定大小
    // let s4 = *s3;

    println!("{},{}", s, s3)
}
