[package]
name = "queryer"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[example]]
name = "dialect"

# [dependencies]
# anyhow = "1.0.69"
# async-trait = "0.1.64" # 允许trait中有 async fn
# polars = { version = "0.27.2", features = ["json", "lazy"] } # DataFrame库
# reqwest = { version = "0.11.14", default-features = false, features = ["rustls-tls"] }
# sqlparser = "0.30.0"
# tokio = "1.25.0"
# tracing = "0.1.37"

# [dev-dependencies]
# tracing-subscriber = "0.3.16"
# tokio ={ version = "1.25.0", features = ["full"]}


[dependencies]
anyhow = "1" # 错误处理，其实对于库我们应该用 thiserror，但这里简单起见就不节外生枝了
async-trait = "0.1" # 允许 trait 里有 async fn
sqlparser = "0.10" # SQL 解析器
polars = { version = "0.15", features = ["json", "lazy"] } # DataFrame 库
reqwest = { version = "0.11", default-features = false, features = ["rustls-tls"] } # 我们的老朋友 HTTP 客户端
tokio = { version = "1", features = ["fs"]} # 我们的老朋友异步库，我们这里需要异步文件处理
tracing = "0.1" # 日志处理

[dev-dependencies]
tracing-subscriber = "0.2" # 日志处理
tokio = { version = "1", features = ["full"]} # 在 example 下我们需要更多的 tokio feature
